{"name": "test_021_04_practise_test_config", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: Unable to locate an element with the xpath expression <button type=\"submit\" class=\"btn btn-bg btn-primary d-block w-100\">Login</button> because of the following error:\nSyntaxError: Failed to execute 'evaluate' on 'Document': The string '<button type=\"submit\" class=\"btn btn-bg btn-primary d-block w-100\">Login</button>' is not a valid XPath expression.\n  (Session info: chrome-headless-shell=120.0.6099.71); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF6E40E4D02+56194]\n\t(No symbol) [0x00007FF6E40504B2]\n\t(No symbol) [0x00007FF6E3EF76AA]\n\t(No symbol) [0x00007FF6E3EFCFC0]\n\t(No symbol) [0x00007FF6E3EFF38F]\n\t(No symbol) [0x00007FF6E3EFF480]\n\t(No symbol) [0x00007FF6E3F41494]\n\t(No symbol) [0x00007FF6E3F417EC]\n\t(No symbol) [0x00007FF6E3F84D77]\n\t(No symbol) [0x00007FF6E3F65EBF]\n\t(No symbol) [0x00007FF6E3F82786]\n\t(No symbol) [0x00007FF6E3F65C23]\n\t(No symbol) [0x00007FF6E3F34A45]\n\t(No symbol) [0x00007FF6E3F35AD4]\n\tGetHandleVerifier [0x00007FF6E445D5BB+3695675]\n\tGetHandleVerifier [0x00007FF6E44B6197+4059159]\n\tGetHandleVerifier [0x00007FF6E44ADF63+4025827]\n\tGetHandleVerifier [0x00007FF6E417F029+687785]\n\t(No symbol) [0x00007FF6E405B508]\n\t(No symbol) [0x00007FF6E4057564]\n\t(No symbol) [0x00007FF6E40576E9]\n\t(No symbol) [0x00007FF6E4048094]\n\tBaseThreadInitThunk [0x00007FF9C4A97344+20]\n\tRtlUserThreadStart [0x00007FF9C54626B1+33]", "trace": "self = <testcases.test_021_04_practise_config.Test_021_04_practise object at 0x0000023544BDCB10>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b7d5ac880b501bb23bbccf77a2557a0a\")>\n\n    def test_021_04_practise_test_config(self, setup):\n    \n        self.driver=setup ;\n    \n        self.driver.get(\"https://practice.expandtesting.com/login\") ;\n    \n        self.driver.find_element(By.XPATH, '//input[@name=\"username\"]').send_keys(self.USERNAME) ;\n    \n        self.driver.find_element(By.XPATH, '//input[@id=\"password\"]').send_keys(self.PASSWORD) ;\n    \n>       self.driver.find_element(By.XPATH, '<button type=\"submit\" class=\"btn btn-bg btn-primary d-block w-100\">Login</button>').click() ;\n\ntestcases\\test_021_04_practise_config.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:742: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:348: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000023545729550>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid selector\",\"message\":\"invalid selector: Unable to locate an elemen...07FF6E4048094]\\\\n\\\\tBaseThreadInitThunk [0x00007FF9C4A97344+20]\\\\n\\\\tRtlUserThreadStart [0x00007FF9C54626B1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: Unable to locate an element with the xpath expression <button type=\"submit\" class=\"btn btn-bg btn-primary d-block w-100\">Login</button> because of the following error:\nE       SyntaxError: Failed to execute 'evaluate' on 'Document': The string '<button type=\"submit\" class=\"btn btn-bg btn-primary d-block w-100\">Login</button>' is not a valid XPath expression.\nE         (Session info: chrome-headless-shell=120.0.6099.71); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6E40E4D02+56194]\nE       \t(No symbol) [0x00007FF6E40504B2]\nE       \t(No symbol) [0x00007FF6E3EF76AA]\nE       \t(No symbol) [0x00007FF6E3EFCFC0]\nE       \t(No symbol) [0x00007FF6E3EFF38F]\nE       \t(No symbol) [0x00007FF6E3EFF480]\nE       \t(No symbol) [0x00007FF6E3F41494]\nE       \t(No symbol) [0x00007FF6E3F417EC]\nE       \t(No symbol) [0x00007FF6E3F84D77]\nE       \t(No symbol) [0x00007FF6E3F65EBF]\nE       \t(No symbol) [0x00007FF6E3F82786]\nE       \t(No symbol) [0x00007FF6E3F65C23]\nE       \t(No symbol) [0x00007FF6E3F34A45]\nE       \t(No symbol) [0x00007FF6E3F35AD4]\nE       \tGetHandleVerifier [0x00007FF6E445D5BB+3695675]\nE       \tGetHandleVerifier [0x00007FF6E44B6197+4059159]\nE       \tGetHandleVerifier [0x00007FF6E44ADF63+4025827]\nE       \tGetHandleVerifier [0x00007FF6E417F029+687785]\nE       \t(No symbol) [0x00007FF6E405B508]\nE       \t(No symbol) [0x00007FF6E4057564]\nE       \t(No symbol) [0x00007FF6E40576E9]\nE       \t(No symbol) [0x00007FF6E4048094]\nE       \tBaseThreadInitThunk [0x00007FF9C4A97344+20]\nE       \tRtlUserThreadStart [0x00007FF9C54626B1+33]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: InvalidSelectorException"}, "start": 1711031353693, "stop": 1711031355148, "uuid": "b2960020-e597-4980-a757-353bbedf6ef1", "historyId": "45461efa6c6fb1b3706a930316eed3ad", "testCaseId": "45461efa6c6fb1b3706a930316eed3ad", "fullName": "testcases.test_021_04_practise_config.Test_021_04_practise#test_021_04_practise_test_config", "labels": [{"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_021_04_practise_config"}, {"name": "subSuite", "value": "Test_021_04_practise"}, {"name": "host", "value": "DESKTOP-U7OANNR"}, {"name": "thread", "value": "17652-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_021_04_practise_config"}]}